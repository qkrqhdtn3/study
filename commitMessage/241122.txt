combinatorics/24723.cpp
https://www.acmicpc.net/problem/24723
어디에 있든 N층에서 N-1층으로 가는 방법은 2가지이다.
따라서 n층에서 1층으로 가는 경우의 수는 2^n이고, pow(2, n)이다.

setMap/26069.cpp
https://www.acmicpc.net/problem/26069
  문제 해결 아이디어
ChongChong이 입력에 등장했을 때부터 set에 연관된 string들을 넣고, 
set.find(string) != set.end() 조건을 사용했을 때 true면 다른 한쌍의 string을 set.insert()하면 된다.
문제의 답은 set.size()를 출력하면 된다.
  피드백
map<string,bool>을 사용해도 좋을것 같다.

multiple/20920.cpp data structures, sorting, unordered_map
https://www.acmicpc.net/problem/20920
  문제 해결 아이디어
구현할 우선순위 세개를 해석하면 밑과 같다.
1. 자주 나오는 단어 내림차순
2. string.length() 내림차순
3. string 오름차순
또한 string.length() >= m을 만족해야한다.
sort() 함수의 인자인 compare 함수를 만들 때의 경우의 수는 다음과 같다.
1. 1번이 다르면 1번에 따라서 정렬 
2. 1번이 같고 2번이 다르면 2번에 따라서 정렬
3. 1번, 2번이 같으면 3번에 따라서 정렬
자료구조는 unordered_map에 조건에 맞게 입력을 받고, vector에 unordered_map을 옮기고, 
위의 compare인자를 이용해 sort()하고, 출력하면된다.
  피드백
sort()에 인자로 넣을 compare 함수를 만들 때 우선순위 1, 2, 3을 지키며 한 번에 compare 할 수 있는 방법을 잘 이해하게 됬다.
unordered_map은 hash_map과 거의 비슷하고, hash_map은 비표준이므로 unordered_map을 사용하는게 좋다.
unordered_map은 정렬할 때 vector에 넣어 sort() 함수를 사용해 compare class와 사용하는게 좋은 것 같다.
  unordered_map의 값을 vector에 넘기는 방법
생성자, copy(), v.assgin(), for 반복문 등이 있는것 같다.
  sort()를 vector대신 unordered_map으로 정렬했는데 안됬었다.
sort()의 인자는 밑의 참조에 따라 RandomAccessIterator 요구사항을 만족해야 하고,
Compare 요구사항을 만족해야 한다.
요구사항을 만족하지 못해 에러가 난 것 같다.
  참조
https://en.cppreference.com/w/cpp/algorithm/sort
https://en.cppreference.com/w/cpp/named_req/RandomAccessIterator
https://en.cppreference.com/w/cpp/named_req/Compare