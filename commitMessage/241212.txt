stack/3015.cpp
https://www.acmicpc.net/problem/3015
------
  문제 해결 아이디어
서로 볼 수 있는 쌍의 수를 구해야 한다.
크게 두가지 방법으로 구할 수 있을 것 같다.
1. 서로 볼 수 있는 사람의 수를 중복 없이 찾는 방법
2. 서로 볼 수 있는 사람의 수를 중복을 포함해 찾는 방법
우선 1번으로 풀었다. 2번으로 풀어도 중복된 값에 2를 나누면 1번과 같은 답이 나올 것이다.

중복 없이 찾는 방법은 다양한 방법이 있겠으나,
i = 1 ; i <= n ; i++ 일 때, j = i - 1 ; j > 0 ; j-- 과 같은 형식으로 비교했다.
모두가 앞만 보는 기준일 때, 볼 수 있는 사람의 수를 구하는 방식으로 해석하는 느낌이다.

항상 바로 앞의 사람은 볼 수 있고,
앞쪽은 사이에 둘보다 큰 사람이 없어야 볼 수 있다.
중간에 큰 사람이 있을때는 볼 수 없다.
키가 큰 사람이  키가 커지는 순서대로 볼 수 있다. 
앞쪽에 큰 사람이 보이기 전, 모두 같은 키를 가진 사람 모두를 볼 수 있다.
이를 조건으로 잘 나눠보면,

앞의 키순서가 curHeight보다 작거나 같은 사람들 중에서,
키가 커지거나 같아지는 순서대로 있는 사람들만 볼 수 있다.
그리고 그 다음으로 나보다 큰 사람 한명은 볼 수 있다. 
  예시
7  5  5  4  2  3  6
o  o  o  o  x  o  cur


키가 커지는 순서대로 사람이 있을 때는 그 모두를 볼 수 있다.


바로 앞의 사람이 curHeight보다 키가 클 경우, 앞앞을 볼 때,
o curHeight보다 키가 커지는 순서대로 사람이 있을 때는 그 모두를 볼 수 있다.
x curHeight와 키가 같은 사람이 있을 때는 키가 같은 그 모두를 볼 수 없다.
x curHeight보다 키가 작은 사람은 못본다.

배열에 입력값을 넣는다고 가정 할 때, 
더 큰 값을 입력 받을 때,
같은 값을 입력 받을 때,
작은 값을 입력 받을 때, 

스택에는 작아지는 순서대로 남아있다.



------
  피드백
문제에서 요구하는 조건을 잘못 해석했다.
"두 사람 A와 B가 서로 볼 수 있으려면, 두 사람 사이에 A 또는 B보다 키가 큰 사람이 없어야 한다." 의 뜻은
a와 b 사이의 어떤 수를 x 라고 할 때, 
모든 x에 대하여 !(x > a || x > b)가 참인 경우 a, b가 볼 수 있다는 것이었는데,
a와 b 사이의 어떤 수를 x 라고 할 때, 
모든 x에 대하여 !(x > a && x > b)가 참인 경우로 해석해서 문제를 조금 다시 풀게 됐다.
조건을 잘 해석해야겠다.

앞을 보는 기준으로 볼 수 있는 사람의 배열을 우선 필요하다고 생각하고 만들었는데,
결과적으로는 프로그램 구조상 메모리를 더 차지하고 비효율적이라 필요가 없었으나,
테스트 단계에서 볼 수 있는 쌍의 수를 출력해,
각각이 어떤 값을 가진지 파악하기 쉽게 되어 문제 해결에 큰 도움이 되었다.



2412251
242211


i  heightArr cntSum
2 2
4 2
5 5
st 5 1

5 4 3 
3 3 3
3 + 3 + 3
6 + 3

14
7 7 8 6 5 3 7 4 7 7 10 6 1 2
0 1 2 1 1 1 4 1 3 3 4  1 1 2
0 1 2 1 1 1 4 1 3 2 4  2 1 2
                       4 5

28
7 7 8 6 5 3 7 4 7 7 10 6 1 2 7 7 8 6 5 3 7 4 7 7 10 6 1 2
9
3 3 3 3 3 3 3 3 3
9
5 5 5 4 4 4 3 3 3
36
9
1 2 5 1 2 4 1 2 3
18
5 4 3