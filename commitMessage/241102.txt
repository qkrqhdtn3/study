prefixSum/16139.cpp
dp는 행의 길이가 27, 열의 범위가 s.length() + 1이다. 행의 1부터 26까지 a부터 z를 담당한다.
누적합 전체를 구하기 위해 0열 0으로 대입 
누적합 배열을 구하기 위한 아이디어 : 
1. s 문자열의 모든 문자에 해당하는 알파벳을 누적합 배열에 알맞게 ++해야하는데, 정확한 식을 얻기 전에 일단 s.length()번의 반복문이 필요하다는 것을 알 수 있다.
2. 누적합 배열의 크기가 26 * s.length()라면 배열을 채우기 위해 최소 26 * s.length() + a 번의 연산이 필요하다.
i<s.length() 배열에서 1. dp[i + 1] = dp[i];, 2. dp[s.at(i)][i]++; 를 만족하며 j<26 배열에서 dp[j + 1][i] = dp[j][i]를 만족해야한다. 
피드백 : 
누적합을 구하는 반복문을 i<26, j<s.length()로 해서 구현이 자꾸 복잡해지고 헤맸었다. 쉬운 풀이는 i<s.length(), j<26으로 하면 된다.
배열의 열은 1을 더한 상태로 사용했고, 행은 0~25를 a~z를 대응하여 사용했는데,
오랜만에 구현하는 개념들이 많아서 머리가 복잡할 때 저 부분들이 구현하며 헷갈리는 부분이 있었다. 
배열의 구조를 헷갈리지 않게 잘 생각해야 된다는 것을 리마인드했다.
