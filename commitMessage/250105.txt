codeforces/contests/div2 992
------
codeforces/contests/div2 992
https://codeforces.com/contest/2040
------
codeforces/contests/div2 992
  B.cpp
  아이디어
1번 연산은 ai = 0 일 경우 1로 만드는 연산이다.
2번 연산은 al = 1, ar = 1이고, al + ... + ar >= (r - l + 1) / 2 이면
l <= i <= r인 ai에 모두 1을 할당한다.
길이 n인 배열의 모든 요소를 1로 만들 때, 1번 연산의 최소 횟수를 구해야 한다.

우선 1번 연산으로 a1 = 1을 해야한다. cnt = 1
이제 1번 연산과 2번 연산을 반복하면 된다.

  2번 연산을 성공시키기 위한 r의 최대값을 구하는 방법
2번 연산의 조건에 따라 r을 기준으로 정리하면
al + ... + ar >= (r - l + 1) / 2
al + ... + ar >= r / 2
2 * (al + ... + ar) >= r
현재 1의 개수에 2번 연산을 하기 위해 1번 연산으로 ar = 1을 하면 현재 1의 개수에 1이 더해진다.
따라서 (현재 1의 개수 + 1)의 2배가 r의 최대값이다.

따라서 r = 2 * (1의 개수 + 1) 인 index r에 1번 연산을 하고, l = 1, r = r 로 2번 연산을 하는 것을 반복한다.
r >= n 이 될 경우 까지 반복하면 된다.

x는 1의 개수일 때
cnt = 1; r = 1;
while(r < n){
    x = r;
    r = 2 * (x + 1);
    cnt++;
}
을 반복하면 cnt의 값이 1번 연산의 개수이다.