codeforces/contests/div2/1002
------
codeforces/contests/div2/1002
https://codeforces.com/contest/2059
------
codeforces/contests/div2/1002
B.cpp
  문제 설명
길이 n인 배열 a와 짝수인 정수 k가 주어진다.
배열 a를 k개의 비어있지 않은 부분배열로 나눠야하고,
a의 모든 요소는 정확히 하나의 부분배열에 속해야 한다.
모든 부분배열 중에서 짝수 인덱스에 있는 부분 배열을 배열 b로 연결한다. 그 후에 0을 b의 끝에 추가한다.
배열 b의 cost는 bi != i가 되는 최소 인덱스 i이다.
예를 들어 b = [1, 2, 4, 5, 0]일 때, b의 비용은 b[1] = 1, b[2] = 2, b[3] != 3 이므로 cost는 3이다.
a를 최적으로 분할해 얻을 수 있는 배열 b의 cost의 최소 값을 구하는 문제이다.

  아이디어
홀수 인덱스의 부분 배열은 결과적으로 답과 관계가 없으므로 없어지는 것과 같다.

  경우의수
1. n == k인 경우
배열 a의 짝수 인덱스가 배열 b가 된다.

2. 그 외의 경우
인덱스 0인 수는 답에 영향을 주지 않고 제거되는 것과 같다.

2-1. 1 ~ n - k + 1 인덱스의 구간에 a[i] != 1 인 값이 있을 때
그 인덱스를 i라고 하면
홀수 인덱스인 첫번째 인덱스의 부분 배열이 0 ~ i - 1 까지의 모든 요소를 포함한 배열으로 만들면
배열은 [1, ~, 1] 의 모양이다.
짝수 인덱스인 두번째 인덱스의 부분 배열이 1이 아닌수로 시작된다.
배열은 [(1이 아닌 수)] 이다. 
그러면 배열 b는 항상 다음과 같다.
b = [(1이 아닌 수), ~] 이다.
이 배열 b의 cost는 항상 1이다.

2-2. 1 ~ n - k + 1 인덱스의 구간에 a[i] != 1 인 값이 없을 때
2-2-1. n이 홀수일 때
배열 a는 [1, 1, 1, ~] 의 모양이다.
짝수 인덱스인 두번째 인덱스의 부분 배열을 [1, 1]로 만들면
b = [1, 1, ~] 이다.
이 배열 b의 cost는 항상 2이다.
2-2-2. n이 짝수일 때
배열 a는 [1, 1, 1, 1, ~] 의 모양이다.
짝수 인덱스인 두번째 인덱스의 부분 배열을 [1, 1]로 만들면
b = [1, 1, ~] 이다.
이 배열 b의 cost는 항상 2이다.
2-2-1과 2-2-2 모두
배열 b의 cost는 항상 2이다.

정리를 하면
1. n == k일 때 배열 a의 짝수 인덱스가 배열 b가 된다. 배열 b를 만들어 cost를 구하면 된다.
2. n != k 일 때
2-1. 1 ~ n - k + 1 인덱스의 구간에 a[i] != 1 인 값이 있으면 cost는 1이다.
2-2. 1 ~ n - k + 1 인덱스의 구간에 a[i] == 1 인 값이 있으면 cost는 2이다.
이를 구현하면 된다.