codeforces/contests/div2 987
------
codeforces/contests/div2 987
https://codeforces.com/contest/2031
------
codeforces/contests/div2 987
A.cpp

  아이디어
문제의 설명은 조금 길기에 풀이에 필요한 부분만 요약하자면
기둥의 높이는 길이 n의 배열 h에 있고,
현재는 배열의 요소 값이 내림차순인 h[i] >= h[i + 1]으로 되어있는데,
배열의 요소 값이 오름차순인 h[i] <= h[i + 1]로 만들기 위해서 필요한 최소 연산 수를 구해야 한다.

연산은 배열 h의 요소 하나를 양의 정수로 바꾸는 것이다.
i를 고르고 h[i] = x 하는 것과 같다.

h 배열의 내림차순 예시
ex) 7 6 5 4 4 4 4 3 2 2 1

  경우의 수
두가지가 있다.
1. h[i] > h[i + 1]인 경우는 둘 중 하나는 연산을 해 바꿔야 한다.
2. h[i] == h[i + 1]인 경우 연산을 해 바꿔야 되는 경우가 있고, 바꾸지 않아도 되는 경우가 있다.
2-1. 같은 수가 연속된 부분인 부분 배열이 하나면 그 부분은 바꾸지 않아도 된다.
2-2. 같은 수가 연속된 부분인 부분 배열이 두개 이상이라면 한 부분 배열을 제외하고는 모두 연산을 해 바꿔야 된다.

  핵심
따라서 결론은 결국 같은 수가 연속된 부분이 가장 긴 것을 제외하고 모두 연산을 하게 된다.

  풀이
배열에 존재하는 숫자 중 가장 많은 개수의 숫자를 x라하면
x가 아닌 배열의 모든 수를 연산을 하는 것이 최소 연산 횟수이다.
최소 연산 횟수는 n - xCnt 와 같다.