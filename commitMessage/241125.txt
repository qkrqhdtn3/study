25682.cpp
https://www.acmicpc.net/problem/25682
  문제 해결 아이디어
1. Black은 0 White는 1로 생각하고 bool 배열에 저장했다. char 배열에 B나 W로 저장해도 될 것 같다.
1, 1에 있는 사각형을 B로 놓고 색깔을 바꿨다.
1, 1에 있는 사각형이 W가 최소일 땐 repaintMin = k * k - repainMax 등의 코드로 최소값을 구할 수 있다.
2. prefixSum 배열을 만들어 repaint되는 만큼 이차원 배열 누적합을 구해준다.
현재 위치 좌표의 합이 짝수일 때,
Black이면 누적합은 누적합 + 0을 한 것과 같다.
White이면 누적합은 누적합 + 1을 한 것과 같다
현재 위치 좌표의 합이 홀수일 때는 반대이다.
3. kkDp를 구했으나 그냥 변수로 비교해도 된다.
이차원 배열의 누적합을 구할 때 k * k 만큼 누적합을 구하고,
그 값을 repaintMax, repaintMin와 비교한다.
i는 0~n-k, j는 0~m-k만큼 반복하며 최소값 최대값을 구한다.
최소값 최대값을 찾는 것이 끝났으면 1번에서 설명했듯이
1, 1에 있는 사각형을 B로 놓고 색깔을 바꿨고,
1, 1에 있는 사각형이 W가 최소일 땐 repaintMin = k * k - repainMax 등의 코드로 최소값을 구할 수 있다.
repaintMin을 마지막으로 구해주고 출력하면된다.