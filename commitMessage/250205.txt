codeforces/contests/div1Div2/1001
------
codeforces/contests/div1Div2/1001
https://codeforces.com/contest/2062
------
codeforces/contests/div1Div2/1001
A.cpp
  문제 설명
길이가 n인 문자열 s가 주어진다. 0, 1로 구성되어 있다.
s에서 비어있지 않은 부분수열 t를 골라서 연산을 할 수 있다.
t는 인접한 두 문자가 달라야하고, t의 문자를 모두 뒤집는다. 이는 0은 1이 되고, 1은 0이 되는 것이다.
s = 00101에서 인덱스 1, 3, 4, 5를 골라 t를 만들면 t = 0101를 만들어진다.
연산을 하면 s = 10010이 된다.
s의 모든 문자가 0이 되는데 필요한 최소 연산 횟수를 구해야 한다.

  아이디어
연산을 할 때 인접한 두 문자가 달라야 한다.
1. 짝수개의 t를 고르면 0과 1의 개수를 같게 t를 만들 수 밖에 없다. 연산을 했을 때 0과 1의 개수는 변하지 않는다.
2. 홀수개의 t를 고르면 0과 1의 개수가 1개 차이 나도록 t를 만들 수 밖에 없다. 연산을 했을 때 0보다 1이 1개 많아지거나 1개 적어진다.
따라서 홀수개의 1이 하나 더 많은 t를 고르고 연산을 하면 1이 하나 적어지고 0이 하나 많아진다.
이를 간단하게 생각할 수 있는 방법은 정수 1이 포함된 길이가 1인 t를 골라서 연산하는 것이 사람이 생각하기에 가장 간단하다.
그러면 문자열 s에 존재하는 1의 개수만큼 연산을 하면 모두 0을 만들 수 있으므로
문자열 s에 존재하는 1의 개수가 최소 연산의 횟수다.
이를 구현하면 된다.