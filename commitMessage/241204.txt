numberTheory/13909.cpp 
https://www.acmicpc.net/problem/13909
------
  문제 해결 아이디어
약수의 개수가 홀수이면 창문이 열려있고, 약수의 개수가 짝수이면 창문이 닫혀있다.
a * b = c 일 때 a와 b는 sqrt(n) 값을 기준으로 매칭할 수 있다. 이유는 밑과 같다.
sqrt(n) 보다 작은 약수 x개와 sqrt(n) 보다 큰 약수 x개는 서로 매칭되는 쌍이 있다.
따라서 매칭되는 약수들의 개수는 2 * x로 짝수이다.
예외적으로 sqrt(n)이 정수 일 때 sqrt(n) * sqrt(n) 이므로
sqrt(n)은 매칭되는 쌍이 없이 약수 한개이다.
따라서 sqrt(n)이 정수가 아닌 약수는 항상 짝수다.
따라서 약수의 개수가 홀수인 것은 어떤수의 제곱인 수이다.
------
  피드백
처음 문제를 풀 때는 
공간복잡도 O(N) 시간복잡도 O(NlogN)로 풀려고 했었고,
두번째로 문제를 풀 때는 
공간복잡도 O(mil) 시간복잡도 O(NlogN)로 풀려고 했었다.
공간복잡도 해결을 위해 mil로 끊어서 계산하는 방법을 사용하며
공간복잡도에 대한 이해도도 늘었다.
따라서 공간 복잡도를 줄이는 것을 성공한 것에 의미가 있었다.
시간복잡도는 아이디어로 줄일 수 있을까 싶었는데
logN sqrt(n) 등으로 해결해보려고 설계 단계부터 다시 아이디어를 생각하다보니
sqrt(n)으로 문제 해결 아이디어를 만들었다.
하지만 결국 평범한 풀이법에 살을 붙인것과 다름이 없고,
그것을 효율적으로 줄이다보면 평범한 풀이법이 되었다.
------
  공간복잡도 정리 (피드백)
브루트포스식으로 풀려고 했는데 문제의 메모리 제한은 64MB인데,
21억개의 bool 배열을 선언하면 21기가 바이트다.
int 등으로 만들고, 비트로 접근해 공간을 줄여도 21억/8 바이트의 메모리가 필요하다.
------
  시간복잡도 정리 (피드백)
1+1/2+1/3...1/n = (약)ln n이고,
문제에서는 n + n/2 + n/3 + ... + n/n이므로 n * ln n이다.
따라서 시간복잡도는 O(nlogn)이다.
ln(2.2bil)은 약 21.5이다.
문제에서 요구하는 시간복잡도를 만족하기 위해서는 최대 1/20 * n 번 이하로 연산을 줄여야한다.
logN, sqrt(n), 1/20 * n 등으로 해결해야한다.